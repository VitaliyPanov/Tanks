//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity controllableEntity { get { return GetGroup(GameMatcher.Controllable).GetSingleEntity(); } }
    public Tanks.GameLogic.Components.Game.ControllableComponent controllable { get { return controllableEntity.controllable; } }
    public bool hasControllable { get { return controllableEntity != null; } }

    public GameEntity SetControllable(GameEntity newEntity) {
        if (hasControllable) {
            throw new Entitas.EntitasException("Could not set Controllable!\n" + this + " already has an entity with Tanks.GameLogic.Components.Game.ControllableComponent!",
                "You should check if the context already has a controllableEntity before setting it or use context.ReplaceControllable().");
        }
        var entity = CreateEntity();
        entity.AddControllable(newEntity);
        return entity;
    }

    public void ReplaceControllable(GameEntity newEntity) {
        var entity = controllableEntity;
        if (entity == null) {
            entity = SetControllable(newEntity);
        } else {
            entity.ReplaceControllable(newEntity);
        }
    }

    public void RemoveControllable() {
        controllableEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Tanks.GameLogic.Components.Game.ControllableComponent controllable { get { return (Tanks.GameLogic.Components.Game.ControllableComponent)GetComponent(GameComponentsLookup.Controllable); } }
    public bool hasControllable { get { return HasComponent(GameComponentsLookup.Controllable); } }

    public void AddControllable(GameEntity newEntity) {
        var index = GameComponentsLookup.Controllable;
        var component = (Tanks.GameLogic.Components.Game.ControllableComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.Game.ControllableComponent));
        component.Entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceControllable(GameEntity newEntity) {
        var index = GameComponentsLookup.Controllable;
        var component = (Tanks.GameLogic.Components.Game.ControllableComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.Game.ControllableComponent));
        component.Entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveControllable() {
        RemoveComponent(GameComponentsLookup.Controllable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherControllable;

    public static Entitas.IMatcher<GameEntity> Controllable {
        get {
            if (_matcherControllable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Controllable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherControllable = matcher;
            }

            return _matcherControllable;
        }
    }
}
