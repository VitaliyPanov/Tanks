//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AIContext {

    public AIEntity minBallisticDistanceEntity { get { return GetGroup(AIMatcher.MinBallisticDistance).GetSingleEntity(); } }
    public Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent minBallisticDistance { get { return minBallisticDistanceEntity.minBallisticDistance; } }
    public bool hasMinBallisticDistance { get { return minBallisticDistanceEntity != null; } }

    public AIEntity SetMinBallisticDistance(float newValue) {
        if (hasMinBallisticDistance) {
            throw new Entitas.EntitasException("Could not set MinBallisticDistance!\n" + this + " already has an entity with Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent!",
                "You should check if the context already has a minBallisticDistanceEntity before setting it or use context.ReplaceMinBallisticDistance().");
        }
        var entity = CreateEntity();
        entity.AddMinBallisticDistance(newValue);
        return entity;
    }

    public void ReplaceMinBallisticDistance(float newValue) {
        var entity = minBallisticDistanceEntity;
        if (entity == null) {
            entity = SetMinBallisticDistance(newValue);
        } else {
            entity.ReplaceMinBallisticDistance(newValue);
        }
    }

    public void RemoveMinBallisticDistance() {
        minBallisticDistanceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AIEntity {

    public Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent minBallisticDistance { get { return (Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent)GetComponent(AIComponentsLookup.MinBallisticDistance); } }
    public bool hasMinBallisticDistance { get { return HasComponent(AIComponentsLookup.MinBallisticDistance); } }

    public void AddMinBallisticDistance(float newValue) {
        var index = AIComponentsLookup.MinBallisticDistance;
        var component = (Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMinBallisticDistance(float newValue) {
        var index = AIComponentsLookup.MinBallisticDistance;
        var component = (Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.AI.MinBallisticDistanceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMinBallisticDistance() {
        RemoveComponent(AIComponentsLookup.MinBallisticDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AIMatcher {

    static Entitas.IMatcher<AIEntity> _matcherMinBallisticDistance;

    public static Entitas.IMatcher<AIEntity> MinBallisticDistance {
        get {
            if (_matcherMinBallisticDistance == null) {
                var matcher = (Entitas.Matcher<AIEntity>)Entitas.Matcher<AIEntity>.AllOf(AIComponentsLookup.MinBallisticDistance);
                matcher.componentNames = AIComponentsLookup.componentNames;
                _matcherMinBallisticDistance = matcher;
            }

            return _matcherMinBallisticDistance;
        }
    }
}
