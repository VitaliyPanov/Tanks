//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AIContext {

    public AIEntity activeAgentEntity { get { return GetGroup(AIMatcher.ActiveAgent).GetSingleEntity(); } }
    public Tanks.GameLogic.Components.AI.ActiveAgentComponent activeAgent { get { return activeAgentEntity.activeAgent; } }
    public bool hasActiveAgent { get { return activeAgentEntity != null; } }

    public AIEntity SetActiveAgent(AIEntity newEntity) {
        if (hasActiveAgent) {
            throw new Entitas.EntitasException("Could not set ActiveAgent!\n" + this + " already has an entity with Tanks.GameLogic.Components.AI.ActiveAgentComponent!",
                "You should check if the context already has a activeAgentEntity before setting it or use context.ReplaceActiveAgent().");
        }
        var entity = CreateEntity();
        entity.AddActiveAgent(newEntity);
        return entity;
    }

    public void ReplaceActiveAgent(AIEntity newEntity) {
        var entity = activeAgentEntity;
        if (entity == null) {
            entity = SetActiveAgent(newEntity);
        } else {
            entity.ReplaceActiveAgent(newEntity);
        }
    }

    public void RemoveActiveAgent() {
        activeAgentEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AIEntity {

    public Tanks.GameLogic.Components.AI.ActiveAgentComponent activeAgent { get { return (Tanks.GameLogic.Components.AI.ActiveAgentComponent)GetComponent(AIComponentsLookup.ActiveAgent); } }
    public bool hasActiveAgent { get { return HasComponent(AIComponentsLookup.ActiveAgent); } }

    public void AddActiveAgent(AIEntity newEntity) {
        var index = AIComponentsLookup.ActiveAgent;
        var component = (Tanks.GameLogic.Components.AI.ActiveAgentComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.AI.ActiveAgentComponent));
        component.Entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceActiveAgent(AIEntity newEntity) {
        var index = AIComponentsLookup.ActiveAgent;
        var component = (Tanks.GameLogic.Components.AI.ActiveAgentComponent)CreateComponent(index, typeof(Tanks.GameLogic.Components.AI.ActiveAgentComponent));
        component.Entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveActiveAgent() {
        RemoveComponent(AIComponentsLookup.ActiveAgent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AIMatcher {

    static Entitas.IMatcher<AIEntity> _matcherActiveAgent;

    public static Entitas.IMatcher<AIEntity> ActiveAgent {
        get {
            if (_matcherActiveAgent == null) {
                var matcher = (Entitas.Matcher<AIEntity>)Entitas.Matcher<AIEntity>.AllOf(AIComponentsLookup.ActiveAgent);
                matcher.componentNames = AIComponentsLookup.componentNames;
                _matcherActiveAgent = matcher;
            }

            return _matcherActiveAgent;
        }
    }
}
